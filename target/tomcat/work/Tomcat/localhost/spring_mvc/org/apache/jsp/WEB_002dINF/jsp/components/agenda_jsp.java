/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2023-03-29 22:56:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.components;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mg.ando.model.Film;
import java.time.LocalDate;
import mg.ando.model.Scene;
import mg.ando.dao.HibernateDao;
import mg.ando.type.AgendaType;
import java.util.List;

public final class agenda_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	List<AgendaType> listAgendaType = (List<AgendaType>) request.getAttribute("scenes");
	HibernateDao dao = (HibernateDao) request.getAttribute("dao");
	LocalDate dateDebut = LocalDate.parse(request.getParameter("dateDebut"));
	int nbJourTournage = listAgendaType.get(listAgendaType.size() - 1).getJour() + 1;
	double dureeTotale = 0;
	Film film = dao.findById(Film.class, Integer.parseInt(request.getParameter("idFilm")));

      out.write("\r\n");
      out.write("\r\n");
      out.write("<main id=\"main\" class=\"main\">\r\n");
      out.write("\r\n");
      out.write("    <div class=\"pagetitle\">\r\n");
      out.write("        <h1>");
      out.print(film.getNom());
      out.write("</h1>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <section class=\"section\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-lg-8\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <h5 class=\"card-title\">Agenda</h5>\r\n");
      out.write("\r\n");
      out.write("                        <table class=\"table\">\r\n");
      out.write("                            <thead>\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th scope=\"col\">Jour</th>\r\n");
      out.write("                                    <th scope=\"col\">Date</th>\r\n");
      out.write("                                    <th scope=\"col\">Scene</th>\r\n");
      out.write("                                    <th scope=\"col\">Plateau</th>\r\n");
      out.write("                                    <th scope=\"col\">Duree</th>\r\n");
      out.write("                                    <th scope=\"col\">Details</th>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                            </thead>\r\n");
      out.write("                            <tbody>\r\n");
      out.write("                                ");
 for (AgendaType tmp : listAgendaType) {
										Scene s = dao.findById(Scene.class, tmp.getIdScene());
										LocalDate dateTournage = dateDebut.plusDays(tmp.getJour());
										dureeTotale += s.getDuree();
                                
      out.write("\r\n");
      out.write("                                <tr>\r\n");
      out.write("                                    <th scope=\"row\">J");
      out.print((tmp.getJour() + 1));
      out.write("</th>\r\n");
      out.write("                                    <td>");
      out.print(dateTournage);
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print(s.getNom());
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print(tmp.getPlateau());
      out.write("</td>\r\n");
      out.write("                                    <td>");
      out.print(s.getDuree());
      out.write(" min</td>\r\n");
      out.write("                                    <td><a href=\"planifier?id=");
      out.print(s.getId());
      out.write("&dateplanning=");
      out.print(dateTournage);
      out.write("\"><span class=\"badge bg-success\">Plannifier</span></a></td>\r\n");
      out.write("                                </tr>\r\n");
      out.write("                                ");
 }
      out.write("\r\n");
      out.write("                            </tbody>\r\n");
      out.write("                        </table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"col-lg-4\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <div class=\"card-body\">\r\n");
      out.write("                        <h5 class=\"card-title\">Statistics</h5>\r\n");
      out.write("                        <table class=\"table table-bordered\">\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>Date de debut</th>\r\n");
      out.write("                                <td>");
      out.print(dateDebut);
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>Date de fin</th>\r\n");
      out.write("                                <td>");
      out.print(dateDebut.plusDays(nbJourTournage - 1));
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>Nombre de jour de tournage</th>\r\n");
      out.write("                                <td>");
      out.print(nbJourTournage);
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>Duree totale</th>\r\n");
      out.write("                                <td>");
      out.print(dureeTotale);
      out.write(" min</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </table>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("</main>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction submitForm()\r\n");
      out.write("\t{\r\n");
      out.write("\t\t//création de l'objet XMLHttpRequest\r\n");
      out.write("\t\tvar xhr;\r\n");
      out.write("\t\ttry {\r\n");
      out.write("\t\t\txhr = new ActiveXObject('Msxml2.XMLHTTP');\r\n");
      out.write("\t\t} catch (e)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\ttry {\r\n");
      out.write("\t\t\t\txhr = new ActiveXObject('Microsoft.XMLHTTP');\r\n");
      out.write("\t\t\t} catch (e2)\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\ttry {\r\n");
      out.write("\t\t\t\t\txhr = new XMLHttpRequest();\r\n");
      out.write("\t\t\t\t} catch (e3) {\r\n");
      out.write("\t\t\t\t\txhr = false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//Définition des changements d'états    \r\n");
      out.write("\t\txhr.onreadystatechange = function ()\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tif (xhr.readyState == 4) {\r\n");
      out.write("\t\t\t\tif (xhr.status == 200) {\r\n");
      out.write("\t\t\t\t\tvar retour = JSON.parse(xhr.responseText);\r\n");
      out.write("\t\t\t\t\tvar resultat = document.getElementById(\"dyn\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\tresultat.value = retour[0].Nom;\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tdocument.dyn = \"Error code \" + xhr.status;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t\t//XMLHttpRequest.open(method, url, async)\r\n");
      out.write("\t\txhr.open(\"GET\", \"/plannifier\", true);\r\n");
      out.write("\r\n");
      out.write("\t\t//XMLHttpRequest.send(body)\r\n");
      out.write("\t\txhr.send(null);\r\n");
      out.write("\t}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
